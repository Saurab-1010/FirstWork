@model ProjectFirst.Models.ChangePasswordViewModel

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-sm-9 col-sm-offset-3 col-lg-10 col-lg-offset-2 main">
    

    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">Update password</h1>
        </div>
    </div><!--/.row-->


    <div class="row">
        <div class="col-md-12">

            <div class="panel panel-default">
                <div class="panel-heading">
                   
                </div>
                <div class="panel-body">
                    <div class="canvas-wrapper">

                        @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">


                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConfirmNew, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.PasswordFor(model => model.ConfirmNew, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ConfirmNew, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Change Password" class="btn btn-info" />

                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div><!--/.row-->
    <div class="row">
        
        <div class="col-sm-12">
            <p class="back-link">FarWestern University <a href="#">Students</a></p>
        </div>
    </div><!--/.row-->
</div>

<script>
    function SubmitForm(form) {
        $.validator.unobtrusive.parse(form);
        if ($(form).valid()) {
            $.ajax({
                type: "POST",
                url: form.action,
                data: $(form).serialize(),
                success: function (data) {
                    if (data.success) {


                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "success"
                        })

                    }
                    else {
                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "warning"
                        })
                    }
                }
            });
        }
        return false;
    }

</script>
